<style>
  .comment-section {
    max-width: 700px;
    margin: auto;
  }
  .comment {
    display: flex;
    align-items: flex-start;
    margin-bottom: 20px;
  }
  .profile-img {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    margin-right: 15px;
  }
  .comment-body {
    flex: 1;
  }
  .comment-header {
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 14px;
    font-weight: bold;
  }
  .comment-time {
    font-size: 12px;
    color: gray;
    font-weight: normal;
  }
  .comment-text {
    font-size: 14px;
    margin-top: 4px;
  }
  .edited {
    font-size: 12px;
    color: gray;
    margin-left: 5px;
  }
  .comment-actions {
    margin-top: 6px;
    display: flex;
    gap: 10px;
  }
  .comment-actions button {
    padding: 2px 8px;
    font-size: 12px;
    border: none;
    background-color: #f0f0f0;
    cursor: pointer;
    border-radius: 4px;
  }
  .comment-actions button:hover {
    background-color: #e0e0e0;
  }
</style>

<div class="comment-section">
  <% if (comments && comments.length === 0) { %>
  <div>Be the first to comment on this article</div>
  <% } else { %> <% comments.forEach(comment => { %>
  <div class="comment">
    <img
      src="<%= comment.CommentBy.profilePicture || '/default-profile.png' %>"
      class="profile-img"
      alt="profile"
    />
    <div class="comment-body">
      <div class="comment-header">
        <%= comment.CommentBy.FullName || 'Anonymous' %>
        <span class="comment-time" data-time="<%= comment.createdAt %>"></span>
        <% if (comment.edited) { %>
        <span class="edited">(edited)</span>
        <% } %>
      </div>
      <div class="comment-text"><%= comment.comment %></div>

      <!-- New Buttons Section -->
      <div class="comment-actions">

    
      <!-- <button class="like-btn" onclick="toggleLike('<%= comment._id %>')" data-id="<%= comment._id %>">üëç Like <%= comment.likes.length  %></span>)</button>-->
        <button class="like-btn" onclick="toggleLike('<%= comment._id %>')" data-id="<%= comment._id %>">
  üëç Like <span id="likes-<%= comment._id %>"><%= comment.likes.length %></span>
</button>
        <button class="dislike-btn" data-id="<%= comment._id %>">
          üëé Dislike
        </button>
        <button class="edit-btn" data-id="<%= comment._id %>">‚úèÔ∏è Edit</button>
        <button class="delete-btn" data-id="<%= comment._id %>">
          üóëÔ∏è Delete
        </button>
      </div>
    </div>
  </div>
  <% }); %> <% } %>
</div>

<!-- Moment.js CDN -->
<script src="https://cdn.jsdelivr.net/npm/moment@2.29.4/moment.min.js"></script>

<!-- Format "x time ago" -->
<script>
  document.querySelectorAll(".comment-time").forEach((el) => {
    const isoTime = el.getAttribute("data-time");
    el.textContent = moment(isoTime).fromNow();
  });

  // Optional: Event listeners for buttons (you can connect AJAX here)
  /*document.querySelectorAll(".like-btn").forEach((btn) => {
    btn.addEventListener("click", () => {
      const id = btn.dataset.id;
      console.log(`Liked comment ID: ${id}`);
       const res = fetch(`/user/comment/${id}/like`, { method: 'POST' });
       console.log('res is', res);

    });
  });*/

  document.querySelectorAll(".dislike-btn").forEach((btn) => {
    btn.addEventListener("click", () => {
      const id = btn.dataset.id;
      console.log(`Disliked comment ID: ${id}`);
      // TODO: Send dislike request
    });
  });

  document.querySelectorAll(".edit-btn").forEach((btn) => {
    btn.addEventListener("click", () => {
      const id = btn.dataset.id;
      console.log(`Edit comment ID: ${id}`);
      // TODO: Open edit modal or enable inline editing
    });
  });

  document.querySelectorAll(".delete-btn").forEach((btn) => {
    btn.addEventListener("click", () => {
      const id = btn.dataset.id;
      // TODO: Confirm and delete comment
    });
  });
</script>

<script>
  async function toggleLike(commentId) {
    try {
      const res = await fetch('/user/comment/' + commentId + '/like', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });

      const data = await res.json();

      if (data.success) {
        // Update the like count
        const likeElement = document.getElementById('likes-' + commentId);
        likeElement.innerText = data.totalLikes;
      }
    } catch (err) {
      console.error("Error toggling like:", err);
    }
  }
</script>